<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

    <context:property-placeholder location="classpath:jdbc.properties"/>

    <context:component-scan base-package="com.lyn.demo.index.study"/>

    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.lyn.**.dao"/>
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>

    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"/>
        <property name="configLocation" value="classpath:mybatis-config.xml"/>
        <property name="mapperLocations" value="classpath*:mapper/*.xml" />
    </bean>

    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" >
        <!--JDBC链接信息-->
        <property name="driverClassName" value="${jdbc.mysql.driver}"/>
        <property name="url" value="${jdbc.mysql.url}"/>
        <property name="username" value="${jdbc.mysql.username}"/>
        <property name="password" value="${jdbc.mysql.password}"/>

        <!-- 初始化连接数 -->
        <property name="initialSize" value="${dbcp.initialSize}"/>

        <!--最大连接数-->
        <property name="maxActive" value="${dbcp.maxActive}"/>

        <!--最大空闲连接-->
        <property name="maxIdle" value="${dbcp.maxIdle}"/>

        <!--最小空闲连接-->
        <property name="minIdle" value="${dbcp.minIdle}"/>

        <!-- 超时等待时间 以毫秒为单位 -->
        <property name="maxWait" value="${dbcp.maxWait}"/>

        <!-- 连接池创建连接的默认的auto-commit状态 -->
        <property name="defaultAutoCommit" value="${dbcp.defaultAutoCommit}"/>

        <!-- 在空闲连接回收器执行周期(毫秒) -->
        <property name="timeBetweenEvictionRunsMillis" value="${dbcp.timeBetweenEvictionRunsMillis}"/>

        <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量 -->
        <property name="numTestsPerEvictionRun" value="${dbcp.numTestsPerEvictionRun}"/>

        <!-- 最小空闲时间 -->
        <property name="minEvictableIdleTimeMillis" value="${dbcp.minEvictableIdleTimeMillis}"/>

        <!-- 连接被空闲连接回收器检测回收时否校验可用 -->
        <property name="testWhileIdle" value="${dbcp.testWhileIdle}"/>

        <!-- 连接被get时是否校验可用 -->
        <property name="testOnBorrow" value="${dbcp.testOnBorrow}"/>

        <!-- 连接被归还到连接池中时是否校验可用 -->
        <property name="testOnReturn" value="${dbcp.testOnReturn}"/>

        <!-- 检查连接是否可用的查询语句 -->
        <property name="validationQuery" value="${dbcp.validationQuery}"/>

        <!-- 是否自动回收超时连接 -->
        <property name="removeAbandoned" value="${dbcp.removeAbandoned}"/>

        <!-- 自动回收超时时间 -->
        <property name="removeAbandonedTimeout" value="${dbcp.removeAbandonedTimeout}"/>

        <!-- 连接被泄露时是否打印 -->
        <property name="logAbandoned" value="${dbcp.logAbandoned}"/>

    </bean>

    <bean id="jedisPoolConfig" class="redis.clients.jedis.JedisPoolConfig">
        <property name="maxIdle" value="1000" />
        <property name="maxActive" value="1000" />
        <property name="maxWait" value="2000" />
        <property name="testOnBorrow" value="true" />
        <property name="testWhileIdle" value="true" />
        <property name="testOnReturn" value="true" />
    </bean>

    <bean id="jedisPool" class="redis.clients.jedis.JedisPool"  destroy-method="destroy">
        <constructor-arg name="poolConfig" ref="jedisPoolConfig" />
        <constructor-arg name="host" value="127.0.0.1" />
        <constructor-arg name="port" value="6379" />
        <constructor-arg name="timeout" value="0" />
        <!--        <constructor-arg name="password" value="redispwd" />-->
    </bean>

    <bean id="jedisClient" class="com.lyn.demo.index.study.jedis.JedisClient" >
        <constructor-arg name="jedisPool" ref="jedisPool" />
    </bean>

    <bean id="idGenerator" class="com.lyn.demo.index.study.idgen.IdGenerator" />
</beans>